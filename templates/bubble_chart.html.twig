{% set yCount = 1 %}
{% set CHART_BASE_HEIGHT = 40 %}
{% set CHART_LINE_HEIGHT = 7 %}
{% set functionCount = 0 %}
{% for file in filteredFiles %}
    {% for func in file.getFunctions() %}
        {% set functionCount = functionCount + 1 %}
    {% endfor %}
{% endfor %}

<canvas id="bubble_chart" height="{{ CHART_BASE_HEIGHT + CHART_LINE_HEIGHT * functionCount }}" width ="300"></canvas>
<script>
    var timeFormat = 'YYYY-MM-DD h:mm a';
    var bubble_chart = new Chart(document.getElementById("bubble_chart"), {
        type: 'bubble',
        data: {
            files: [
                {% for file in filteredFiles %}
                    {% for func in file.getFunctions() %}
                        {% for commit in func.getCommits() %}
                            "{{ file.getName() }}-{{ func.getCurrentName()}}-{{ commit.getSize() }}",
                        {% endfor %}
                    {% endfor %}
                {% endfor %}
            ],
            datasets: [
                {% for file in filteredFiles %}
                    {% for func in file.getFunctions() %}
                        {% for commit in func.getCommits() %}
                            {% if commit.getCommitDate()|date("Y-m-d") >= startDate|date("Y-m-d")
                            and commit.getCommitDate()|date("Y-m-d") <= endDate|date("Y-m-d") %}
                                {
                                    label: "{{ func.getCurrentName() }}",
                                    data:
                                        [{
                                                x: moment("{{ commit.getCommitDate().format('Y-m-d h') }}").format(timeFormat),
                                                y: {{ yCount }},

                                                {% if commit.getSize() > 100 %}
                                                    r: 1 + {{ commit.getSize() }}*0.07,
                                                {% else %}
                                                    r: 3 + {{ commit.getSize() }}*0.08
                                                {% endif %}
                                        }],
                                    fill:false,
                                    borderColor:"{{ colours[file.getName()][1] }}",
                                    backgroundColor:"{{ colours[file.getName()][0] }}",
                                    body:
                                        [
                                            {% for line in commit.getLines() %}
                                                "{{ line }}",
                                            {% endfor %}
                                        ],
                                    size: "{{ commit.getSize() }}",
                                    fileName: "{{ file.getName() }}"
                                },
                            {% endif %}
                        {% endfor %}
                    {% set yCount = yCount + 1 %}
                    {% endfor %}
                {% endfor %}
            ]
        },
        options: {
            title: {
                display: true,
                text: "Function Lifespan",
                fontSize: 22
            },
            scales: {
                yAxes: [
                    {
                    scaleLabel: {
                        display: true,
                        labelString: "Functions",
                        fontSize: 18

                    },

                    ticks: {
                        min: 0,
                        max: {{ yCount }},
                        stepSize: 1,
                        fontSize:10,
                        callback: function(label, index, labels) {
                            var functions = [
                                {% for func in functions %}
                                    "{{ func }}",
                                {% endfor %}
                            ];
                            if (label == 0) {
                                return ""
                            }
                            return functions[label-1]
                        }
                    }
                }],
                xAxes: [{
                    type: 'time',
                    time: {
                        format: timeFormat,
                        unit: 'day',
                        max: moment("{{endDate}}").format(timeFormat),
                        min: moment("{{startDate}}").format(timeFormat),
                    },
                    scaleLabel: {
                        display: true,
                        labelString: "Time",
                        fontSize: 18
                    },
                    gridLines: {
                        display: false
                    }
                }]
            },
            legend: {
                display: false
            },
            tooltips: {
                callbacks: {
                    beforeLabel: function(tooltipItem, data) {
                        return data.datasets[tooltipItem.datasetIndex].label + "( )";
                    },
                    label: function(tooltipItem, data) {
                        return "Parent file: " + data.datasets[tooltipItem.datasetIndex].fileName;
                    },
                    afterLabel: function(tooltipItem, data) {
                        var lines = data.datasets[tooltipItem.datasetIndex].size;
                        if (lines === '0') {
                            return "DELETED"
                        } else {
                            var label = [];
                            label.push("# of lines: " + lines);
                            label.push("");
                            label.push("Function snippet:");
                            var body = data.datasets[tooltipItem.datasetIndex].body;
                            body.forEach(function(line) {
                                var textArea = document.createElement('textarea');
                                textArea.innerHTML = line;
                                label.push(textArea.value);
                            });
                            return label;

                        }
                    }
                },
                backgroundColor: 'rgba(240,248,255, 0.9)',
                bodyFontColor: '#586062',
                bodyFontSize: 14,
                displayColors: false
            },
            legendCallback: function(chart) {
                var backgroundColours = [
                    {% for file in files %}
                    "{{ colours[file.getName()][0] }}",
                    {% endfor %}
                ];

                var borderColours = [
                    {% for file in files %}
                    "{{ colours[file.getName()][1] }}",
                    {% endfor %}
                ];

                var files = [
                    {% for file in files %}
                    "{{ file.getName() }}",
                    {% endfor %}
                ];

                var text = [];
                for (var i=0; i<files.length; i++) {
                    text.push('<span style="background-color: '+backgroundColours[i]+'; border: 2px solid '+ borderColours[i] +';"></span>');
                    text.push('<sub>' + files[i] + '</sub>');
                }
                return text.join("");
            }


        }
    });
</script>